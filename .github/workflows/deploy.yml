name: CI/CD for Google Cloud Infrastructure

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: 'read'
  id-token: 'write'
  pull-requests: 'write' # Required to comment the plan on the PR

jobs:
  terraform-plan:
    name: 'Terraform Plan'
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: '${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: '${{ secrets.GCP_SERVICE_ACCOUNT }}'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform -chdir=terraform init

      - name: Terraform Plan
        id: plan
        run: terraform -chdir=terraform plan -no-color -input=false
        env:
          TF_VAR_gcp_project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Add Plan to PR
        uses: actions/github-script@v7
        with:
          script: |
            const output = `#### Terraform Plan ðŸ“–\`\n\`\`\`\n${{ steps.plan.outputs.stdout }}\n\`\`\``;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

  terraform-deploy:
    name: 'Terraform Deploy'
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: '${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: '${{ secrets.GCP_SERVICE_ACCOUNT }}'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform -chdir=terraform init

      - name: Terraform Apply
        env:
          # Set the Terraform variable using an environment variable
          TF_VAR_gcp_project_id: ${{ secrets.GCP_PROJECT_ID }}
        run: terraform -chdir=terraform apply -auto-approve